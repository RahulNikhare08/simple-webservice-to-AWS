name: Deploy to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Create ECR Repository
        working-directory: infra
        run: terraform apply -target=aws_ecr_repository.repo -auto-approve

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          ECR_REPO=$(terraform -chdir=infra output -raw ecr_repository_url)
          echo "Building image: $ECR_REPO:$IMAGE_TAG"
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker push $ECR_REPO:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Deploy Infrastructure
        working-directory: infra
        run: terraform apply -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}"

      - name: Test Application
        working-directory: infra
        run: |
          ALB_DNS=$(terraform output -raw alb_dns_name)
          echo "Testing application at: http://$ALB_DNS"
          sleep 60  # Wait for service to be ready
          curl -f http://$ALB_DNS/ || exit 1
          echo "âœ… Application is running successfully!"
