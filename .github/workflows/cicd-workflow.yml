name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Create ECR Repository
        working-directory: infra
        run: |
          terraform apply -target=aws_ecr_repository.repo -auto-approve \
            -var="image_repo_url=placeholder" \
            -var="image_tag=placeholder"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_REPO=${{ steps.login-ecr.outputs.registry }}/hello-fargate
          echo "Pushing image: $IMAGE_REPO:$IMAGE_TAG"
          docker build -t $IMAGE_REPO:$IMAGE_TAG .
          docker push $IMAGE_REPO:$IMAGE_TAG
          echo "IMAGE_REPO=$IMAGE_REPO" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -out=tfplan
        env:
          TF_VAR_image_repo_url: ${{ env.IMAGE_REPO }}
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_image_repo_url: ${{ env.IMAGE_REPO }}
          TF_VAR_image_tag: ${{ env.IMAGE_TAG }}

      - name: Smoke Test ALB
        working-directory: infra
        run: |
          ALB=$(terraform output -raw alb_dns_name)
          curl -f http://$ALB/ || exit 1
