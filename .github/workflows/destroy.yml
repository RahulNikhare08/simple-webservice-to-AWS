name: Destroy AWS Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm infrastructure destruction'
        required: true
        type: string

jobs:
  destroy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Validate Confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
            echo "‚ùå Confirmation failed. You must type 'DESTROY' to proceed."
            exit 1
          fi
          echo "‚úÖ Confirmation validated"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Empty ECR Repository
        run: |
          echo "Emptying ECR repository..."
          aws ecr list-images --repository-name hello-fargate --query 'imageIds[*]' --output json > images.json
          if [ -s images.json ] && [ "$(cat images.json)" != "[]" ]; then
            aws ecr batch-delete-image --repository-name hello-fargate --image-ids file://images.json
            echo "‚úÖ ECR repository emptied"
          else
            echo "‚ÑπÔ∏è ECR repository already empty"
          fi
        continue-on-error: true

      - name: Terraform Destroy
        working-directory: infra
        run: terraform destroy -auto-approve

      - name: Verify Cleanup
        run: |
          echo "Verifying infrastructure cleanup..."
          
          # Check if VPC still exists
          VPC_ID=$(aws ec2 describe-vpcs --filters "Name=tag:Name,Values=hello-fargate-vpc" --query 'Vpcs[0].VpcId' --output text 2>/dev/null || echo "None")
          if [ "$VPC_ID" = "None" ] || [ "$VPC_ID" = "null" ]; then
            echo "‚úÖ VPC successfully destroyed"
          else
            echo "‚ö†Ô∏è VPC still exists: $VPC_ID"
          fi
          
          # Check if ECS cluster still exists
          CLUSTER_STATUS=$(aws ecs describe-clusters --clusters hello-fargate --query 'clusters[0].status' --output text 2>/dev/null || echo "NOT_FOUND")
          if [ "$CLUSTER_STATUS" = "NOT_FOUND" ] || [ "$CLUSTER_STATUS" = "INACTIVE" ]; then
            echo "‚úÖ ECS cluster successfully destroyed"
          else
            echo "‚ö†Ô∏è ECS cluster still active: $CLUSTER_STATUS"
          fi
          
          echo "üéâ Infrastructure destruction completed!"
